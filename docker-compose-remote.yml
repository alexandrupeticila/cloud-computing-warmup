version: "3.2"

services:
    gateway:
        image: alexpeticila/apigatewayservice:dev
        environment:
            BOOKS_SERVICE_API_ROUTE: books-service/api
            NODE_ENV: development
        ports:
            - "8080:80"
        networks:
            - webnet1
            - webnet2
        depends_on:
            - books-service
    books-service:
        image: alexpeticila/bookservice:dev
        environment:
            IO_SERVICE_API_ROUTE: io-service/api
            NODE_ENV: development
        networks:
            - webnet1
            - webnet2
            - webnet3
        depends_on:
            - io-service
    io-service:
        image: alexpeticila/ioservice:dev
        environment:
            PGUSER: admin
            PGPASSWORD: admin
            PGHOST: db
            PGPORT: 5432
            PGDATABASE: books
            NODE_ENV: development
        networks:
            - webnet2
            - webnet3
            - webnet4
        depends_on:
            - db
    db:
        image: postgres:13
        environment:
            POSTGRES_DB: books
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
        networks:
            - webnet3
            - webnet4
        volumes:
            - type: volume
              source: postsqldata
              target: /var/lib/postgresql/data
            - type: bind
              source: ./Database/init-db.sql
              target: /docker-entrypoint-initdb.d/init-db.sql
    adminer:
        image: adminer:4
        networks:
            - webnet4

networks:
    webnet1:
    webnet2:
    webnet3:
    webnet4:

volumes:
    postsqldata:
#webnet1: gateway si carti
#webnet2: gateway carti si IO
#webnet3: carti IO baze de date
#webnet4: io baza de date si adminer
